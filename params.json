{
  "name": "QRedisClient",
  "tagline": "Asynchronous Qt-based Redis client with SSL and SSH tunnelling support.",
  "body": "# qredisclient\r\n\r\n[API documenation](http://uglide.github.io/qredisclient/docs/html/annotated.html) |\r\n[Examples](https://github.com/uglide/qredisclient/tree/master/examples)\r\n\r\n\r\n[![Build Status](https://travis-ci.org/uglide/qredisclient.svg)](https://travis-ci.org/uglide/qredisclient)\r\n[![Build status](https://ci.appveyor.com/api/projects/status/2qtv3nsj16kkm621?svg=true)](https://ci.appveyor.com/project/uglide/qredisclient)\r\n\r\nAsynchronous Qt-based Redis client with SSL and SSH tunnelling support. This client is developed for [RedisDesktopManager](https://github.com/uglide/RedisDesktopManager) by [Igor Malinovskiy](https://github.com/uglide)\r\n\r\n```c++\r\n#include \"qredisclient/redisclient.h\"\r\n\r\nint main(int argc, char *argv[])\r\n{\r\n  // Init qredisclient\r\n  initRedisClient();\r\n  \r\n  // Create connection to local redis\r\n  RedisClient::ConnectionConfig config(\"127.0.0.1\");\r\n  RedisClient::Connection connection(config);\r\n  \r\n  // Run command and wait for result\r\n  connection.commandSync(\"PING\"); \r\n  \r\n  // Run command in async mode\r\n  connection.command(\"PING\");\r\n  \r\n  // Run command in db #2\r\n  connection.command(\"PING\", 2); \r\n  \r\n  // Run async command with callback\r\n  connection.command(\"PING\", [](RedisClient::Response r) { \r\n    QVariant val = r.getValue(); // get value from response\r\n    // do stuff\r\n  });\r\n\r\n  // See more usage examples in examples folder\r\n}\r\n\r\n```\r\n\r\n***Supported Qt versions:*** 5.4-5.6\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}